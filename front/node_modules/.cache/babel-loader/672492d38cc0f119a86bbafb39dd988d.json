{"ast":null,"code":"var _jsxFileName = \"/home/hmathlouthi-pc/Bureau/devops/REPOSUBUNTU/ALRAHALA/client/src/components/Log/AuthenticatedRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { Redirect, Route } from \"react-router\";\nimport Auth from \"../../contexts/Auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthenticatedRoute = ({\n  path,\n  component\n}) => {\n  _s();\n\n  const {\n    isAuthenticated\n  } = useContext(Auth);\n  return isAuthenticated ? /*#__PURE__*/_jsxDEV(Route, {\n    exact: true,\n    path: path,\n    component: component\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/sign-in\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthenticatedRoute, \"V63do9pNTv1q4M9O8C9qYlm3TOw=\");\n\n_c = AuthenticatedRoute;\nexport default AuthenticatedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthenticatedRoute\");","map":{"version":3,"sources":["/home/hmathlouthi-pc/Bureau/devops/REPOSUBUNTU/ALRAHALA/client/src/components/Log/AuthenticatedRoute.js"],"names":["React","useContext","Redirect","Route","Auth","AuthenticatedRoute","path","component","isAuthenticated"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,cAAhC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAyB;AAAA;;AAClD,QAAM;AAAEC,IAAAA;AAAF,MAAsBP,UAAU,CAACG,IAAD,CAAtC;AACA,SAAOI,eAAe,gBACpB,QAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAEF,IAAnB;AAAyB,IAAA,SAAS,EAAEC;AAApC;AAAA;AAAA;AAAA;AAAA,UADoB,gBAGpB,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAHF;AAKD,CAPD;;GAAMF,kB;;KAAAA,kB;AASN,eAAeA,kBAAf","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Redirect, Route } from \"react-router\";\r\nimport Auth from \"../../contexts/Auth\";\r\n\r\nconst AuthenticatedRoute = ({ path, component }) => {\r\n  const { isAuthenticated } = useContext(Auth);\r\n  return isAuthenticated ? (\r\n    <Route exact path={path} component={component} />\r\n  ) : (\r\n    <Redirect to=\"/sign-in\" />\r\n  );\r\n};\r\n\r\nexport default AuthenticatedRoute;\r\n"]},"metadata":{},"sourceType":"module"}